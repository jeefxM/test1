// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique
  password      String @default("")
  emailVerified DateTime?
  image         String?
  shopifyId String?
  expiresAt String?
  avatar String?
  firstName String?
  lastName String?
  phone String?
  city String?
  address String?
  zip String?
  username String? @unique
  accounts      Account[]
  sessions      Session[]
  stores Store[]
  following StoreFollowers[] 
  
}


model Store{
  id   String  @id @default(cuid())
  name String   @unique
  category String?
  description String?
  banner String?
  logo String?
  createdDate String?
  instagram String?
  facebook String?
  twitter String?
  website String?
  email String?
  user User[]
  followers StoreFollowers[]
}

model StoreFollowers{
  id   String  @id @default(uuid())
  username String  
  email String   @unique
  avatar String?
  store Store[]
  user User[]
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}



model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

